@using global::Shared.Models

@if (!_isLoading)
{
    <div class="d-flex flex-wrap mb-3 p-3 bg-light">
        <div class="p-2 bd-highlight">
            <button @onclick="() => OnHandleRequestCallback<IEnumerable<string>>(RequestMessage.GetData)" 
                class="btn btn-warning">
                <i class="fas fa-sync"></i>
                Frissítés
            </button>
        </div>
        <div class="p-2 bd-highlight">
            <button @onclick="() => OnHandleRequestCallback<string>(RequestMessage.CallGC)" 
                class="btn btn-warning">
                <i class="fas fa-broom"></i>
                Takarítás (GC)
            </button>
        </div>
        <div class="p-2 bd-highlight">
            <InputFile id="filePicker" OnChange="UploadFile" class="d-none" accept=".zip" multiple></InputFile>
            <button onclick="document.getElementById('filePicker').click()" class="btn btn-warning">
                <i class="fas fa-cloud-upload-alt"></i>
                Betöltés
            </button>
        </div>
    </div>

    <div class="bg-light mb-3 p-3">
        <div class="d-flex flex-wrap">
            <div class="font-weight-bold">A jelenleg futó projektek:</div>
            <div class="flex-fill"></div>
            <div class="font-italic">Utolsó frissítés időpontja: @_lastRefresh</div>
        </div>
        @foreach (var context in _runningContexts)
        {
            <div class="d-flex flex-wrap bg-info p-2 mt-2 elevating-button">
                <button @onclick="() => RemoveFile(context)" class="btn btn-danger">
                    <i class="fas fa-trash"></i>
                </button>
                <span class="p-2">@context</span>
            </div>
        }
    </div>

    <button @onclick="OnStopCallback" class="btn btn-danger btn-lg btn-block elevating-button">Leállítás</button>
}
else
{
    <Spinner></Spinner>
}
